import{C as ea,o as h,u as Z,s as ra,L as u,b as v,i as ia,a as na,H as C,c as sa,l as X,d as k,e as ca,f as oa,g as da,h as la,j as ua,q as ga,M as f,$ as fa,F as I}from"../../../assets/js/foregroundCache.BJs-C-d6.js";import{t as O,c as y,u as ha,a as b,p as z,b as p,w as N,h as _,d as D,e as ma,s as Ea,f as q,g as L,i as M,C as S,j as x,k as wa,l as J,m as Pa,n as Ca,N as Sa}from"../../../assets/js/moment.D0d7U_v1.js";import{b as A,a as R,o as Oa}from"../../../assets/js/openApp.DVJtUsXQ.js";import{i as U}from"../../../assets/js/@ledgerhq/hw-app-eth.wwcGQeCa.js";import{G as va}from"../../../assets/js/index.DkvvEwj1.js";import{i as T}from"../../../assets/js/index.umd.bNrpW4vQ.js";import{g as ya,S as E}from"../../../assets/js/windowUtils.DSHnWquT.js";import{l as aa}from"../../../assets/js/lodash.BduLK7P_.js";import{a as pa}from"../../../assets/js/ethers.CrVDN1GO.js";import{h as ta}from"../../../assets/js/walletModuleUtils.Dixx0jas.js";import"../../../assets/js/bip39.Q3JWhqge.js";import"../../../assets/js/@ledgerhq/hw-transport-webhid.D8NNKifb.js";import"../../../assets/js/@trezor/connect-plugin-ethereum.DPJesUjC.js";import"../../../assets/js/@trezor/connect-webextension.DbcRL7Ou.js";const Na=new ea;async function _a(){var c,o;const e=(await O.get()).lastFetchConfigs??0,t=await y.get(),[r,n,s,i]=await Promise.all([Ia(!e||!t.common),Aa(!e||!t.chains),Q("ronin-mainnet-v2",!e||!((c=t.contracts)!=null&&c[h.RONIN])),Q("ronin-testnet",!e||!((o=t.contracts)!=null&&o[h.SAIGON]))]);await y.set(g=>{const l={...g};r&&(l.common=r),n&&(l.chains=n);let d=l.contracts;return d||(d={}),s&&(d[h.RONIN]=s),i&&(d[h.SAIGON]=i),l.contracts=d,l}),await ha(),await O.setLastFetchConfigs()}async function Aa(a){if(a)try{const{data:e,status:t}=await b.walletManagerV1ProxyPublicApi(`/configs?user-agent=${encodeURIComponent(Z)}`);if(t!==200||U(e))return;const r=z(e),n=(r==null?void 0:r.chains)??[];return ra(n)}catch(e){u.error("fetchConfigs",e);return}}async function Ia(a){if(a)try{const{status:e,data:t}=await b.walletManagerV2PublicApi(`/common?user-agent=${encodeURIComponent(Z)}`);return U(t)||e!==200?void 0:z(t)}catch(e){u.error("fetchCommon",e);return}}const Q=async(a,e)=>{if(e)try{const t=v.runtime.getManifest().version,r=`ExtensionWallet/${ia()?"Firefox":"Chrome"}/${t}`,{data:n,status:s}=await b.walletManagerV2Api(`/networks/${a}/contracts?user-agent=${encodeURIComponent(r)}`);return U(n)||s!==200?void 0:n}catch(t){u.error("fetchContracts",t);return}},Ta=async()=>{A.isSidePanel=await na(),u.debug("CheckConfig: isSidePanel",A.isSidePanel)},Ma=async()=>{const a=await p.get();if(a!=null&&a.passcode)try{await N.unlock(a.passcode)}catch(e){u.error("EnableWalletModule",e)}};Ta();_a();Ma();function ba(a){switch(a){case 0:return C.INTERNAL;case 1:return C.PARTNER;case 13:return C.THREAT;default:return C.DOMAIN_MATCH}}const P={};async function Da(a,e=!1){try{let t;try{t=new URL(a).hostname}catch{t=a}if(!e&&P[t])return P[t];P[t]=C.UNVERIFIED;const r=await fetch(`${sa.walletManagerV2Address}/trusted-domains/${t}`,{cache:e?"no-cache":"default"});if(!r.ok)return P[t];const n=await r.json(),s=n.error;if(s)return s===404001?null:void 0;const i=n.domain_level;if(aa.isNil(i))return P[t];const c=ba(i);return P[t]=c,c}catch(t){u.error("getRoninTrustedLevel - error",t);return}}const La=async(a,e,t,r,n=!1)=>{var i;if(!a)return;const s={id:_().valueOf(),chain:t==null?void 0:t.chainId};n&&(s.status=X.DROPPED),await D.transactionTracker.createNewTransaction({timestamp:_().valueOf(),transactionHash:a==null?void 0:a.hash,from:a==null?void 0:a.from,to:a==null?void 0:a.to,value:r||"1",gasUsed:(i=a==null?void 0:a.gasLimit)==null?void 0:i.toString(),gasPrice:`${a==null?void 0:a.gasPrice}`,local:s,decoded:{type:k.TRANSFER,name:"",assets:[{type:t==null?void 0:t.tokenStandard,tokenNumber:"",quantity:r||"1"}],data:{value:[{name:t==null?void 0:t.name,symbol:t==null?void 0:t.symbol,address:t==null?void 0:t.contractAddress}],receiver:e}}})},Ua=async(a,e,t,r,n=!1)=>{var i,c;if(!a||!t)return;const s={id:_().valueOf(),chain:Number(a==null?void 0:a.chainId)};n&&(s.status=X.DROPPED),await D.transactionTracker.createNewTransaction({timestamp:_().valueOf(),transactionHash:a==null?void 0:a.hash,from:a==null?void 0:a.from,to:a==null?void 0:a.to,value:r,gasUsed:(i=a==null?void 0:a.gasLimit)==null?void 0:i.toString(),gasPrice:(c=a==null?void 0:a.gasPrice)==null?void 0:c.toString(),local:s,decoded:{type:k.TRANSFER,name:"",data:{value:[{name:t==null?void 0:t.name,symbol:t==null?void 0:t.symbol,address:t==null?void 0:t.contractAddress,value:r,decimals:t==null?void 0:t.decimal,price:t==null?void 0:t.usdPrice}],receiver:e}}})},Fa=async a=>{var g;const{chainId:e,from:t}=a;if(!(e in h)||!t)throw new Error(`Invalid chainId (${e}) or from address (${t})`);const r=(e===h.RONIN||e===h.SAIGON)&&(!(a!=null&&a.gasPrice)||new pa(`${a.gasPrice}`).isZero()),n=ma.getProvider(e,r),s=await Ea.getSignerForAddress(t.toString().toLowerCase());if(!s)throw new Error("Signer not found");const i=await N.getAccountByAddress(t.toString());if((i==null?void 0:i.type)===la.MPC&&((g=await q.get())==null?void 0:g.changedPass))throw new Error("Recovery password has changed, please verify before continuing");aa.isEmpty(a.value)&&(a.value=0);const c=s.connect(n),o=await c.populateTransaction(a);return c.sendTransaction(o)},Va=async a=>{const{txRequest:e,token:t,rawAmount:r,receiverAddress:n}=a,s=ca(t==null?void 0:t.tokenStandard,oa.ERC20)||da(t==null?void 0:t.contractAddress);try{const i=await Fa(e);s?await Ua(i,n,t,r):await La(i,n,t,r)}catch(i){u.error("[sendTx] err:",i);const c=typeof i=="object"?{...i,message:i==null?void 0:i.message,code:i==null?void 0:i.code}:i;throw await ta(c),c}},Y=async(a,e)=>{var F,V,G,K,j,$,W,B,H;const t=p.hasPassword();if(((F=a==null?void 0:a.message)==null?void 0:F.method)===S.eth_accounts&&!t)return{isWalletEvent:!0,type:T.WalletEventType.JSON_RPC_RESPONSE,data:{...a.message,result:[]}};const r=e.origin||e.url;let n=new URL(r);const s=Sa,[i]=x.getSessionsByHostname(n.hostname);let c=!1;const o=n.hostname===ya();o&&((V=a.peerMeta)!=null&&V.url)&&(n=new URL(a.peerMeta.url)),u.debug("Request Sender:",o,e,n.hostname),!o&&(s.includes((G=a==null?void 0:a.message)==null?void 0:G.method)||((K=a==null?void 0:a.message)==null?void 0:K.method)===S.eth_requestAccounts&&(!i||!t))&&((j=e.tab)!=null&&j.id&&Oa(e.tab.id,(($=a==null?void 0:a.message)==null?void 0:$.method)!==S.ronin_requestPage),c=!t&&!!i);const g=await Da(n.hostname,!1),l=await y.get();let d=h.RONIN;l.isSingleChain&&(d=((W=l.activeChainIds)==null?void 0:W[0])??h.RONIN),i&&(d=i.getChainIds()[0]);const m={...a.peerMeta,url:o?(B=a.peerMeta)==null?void 0:B.url:n.origin,trustedLevel:g??C.UNVERIFIED};if(c&&!await L.waitForUnlock(m,[S.eth_requestAccounts,S.eth_accounts].includes((H=a==null?void 0:a.message)==null?void 0:H.method)))return{isWalletEvent:!0,type:T.WalletEventType.JSON_RPC_RESPONSE,data:{...a.message,error:{message:"User rejected the request.",code:4001}}};const w=await wa.handleAdvanced({...a.message,options:{clientMetadata:m,connectMethod:o?void 0:fa.INJECTED,chainId:d,requestTypes:o?["granted"]:void 0}});return await ta(w),{isWalletEvent:!0,type:T.WalletEventType.JSON_RPC_RESPONSE,data:w}},Ga=async a=>{var s,i,c,o,g,l,d,m;let e,t,r,n;switch(a.storageKey){case E.ACCOUNT_STORE:await Ca.onAccountChanged();break;case E.TEMP_STORE:if(n=await O.get(),(s=n.pendingTx)!=null&&s.payload&&((i=n.pendingTx)==null?void 0:i.status)==="pending")try{await Va((c=n==null?void 0:n.pendingTx)==null?void 0:c.payload),await((g=(o=D)==null?void 0:o.transactionTracker)==null?void 0:g.startOrStopIfNeeded()),await O.setPendingTx({...n.pendingTx,status:"success"})}catch(w){await O.setPendingTx({...n.pendingTx,status:"error",error:w})}break;case E.SESSION_STORE:await x.init();break;case E.WALLET_STORE:await p.updateLastChanged(),e=await Pa.getValues(),e.length===0&&await N.lock(!1);break;case E.UNLOCK_STORE:if(t=await p.get(),t.passcode)try{u.debug("Unlock background"),await N.unlock(t.passcode)}catch(w){u.error("UnlockB",w)}break;case E.ACTION_QUEUE_STORE:if(await J.refetch(),r=(l=J)==null?void 0:l.getCurrentAction(),!r||(r==null?void 0:r.status)===I.PENDING)return;if((r==null?void 0:r.status)==I.APPROVED){M.approveCurrent((d=r.payload)!=null&&d.result?{result:(m=r.payload)==null?void 0:m.result}:void 0);return}(r==null?void 0:r.status)===I.REJECTED&&M.rejectCurrent();break;case E.CONFIG_STORE:a.changedKeys.includes("isOverwriteEthereum")&&ja();break}};v.runtime.onConnect.addListener(async a=>{var e;if(((e=a.sender)==null?void 0:e.id)!==v.runtime.id){u.error("onConnect: Unknown sender id");return}switch(a.name){case ua.POPUP:R.setIsOpening(!0),a.onDisconnect.addListener(t=>{L.emit(va.POPUP_CLOSED,t.sender),R.setIsOpening(!1)});break}});M.on(ga.ACTION_ADDED,async()=>{try{await L.waitForApproval()}catch(a){u.error("Wait For Unlock:",a)}});chrome.storage.onChanged.addListener(async a=>{var e,t;for(const r in a){const n=[],s=Object.entries(((e=a==null?void 0:a[r])==null?void 0:e.oldValue)??{}),i=Object.entries(((t=a==null?void 0:a[r])==null?void 0:t.newValue)??{});s.forEach(o=>{const g=o[0],l=o[1],d=i.find(m=>m[0]===g);d&&d[1]!==l&&n.push(g)});const c={type:f.STORAGE_CHANGE,storageKey:r,changedKeys:n};v.runtime.sendMessage(c),await Ga(c)}});Na.subscribe([f.SIDE_PANEL_CONFIG_CHANGED,f.ASK_PROVIDER_FROM_CONTENT_SCRIPT,f.ASK_PROVIDER_FROM_POPUP,f.KEEP_ALIVE_FROM_POPUP,f.KEEP_ALIVE_FROM_CONTENT_SCRIPT],async(a,e)=>{var t;switch(a.type){case f.SIDE_PANEL_CONFIG_CHANGED:return A.isSidePanel=((t=await chrome.sidePanel.getPanelBehavior())==null?void 0:t.openPanelOnActionClick)??!1,Promise.resolve(void 0);case f.ASK_PROVIDER_FROM_CONTENT_SCRIPT:return Y(a,e);case f.ASK_PROVIDER_FROM_POPUP:return Y(a,e);case f.KEEP_ALIVE_FROM_POPUP:return Promise.resolve(void 0);case f.KEEP_ALIVE_FROM_CONTENT_SCRIPT:return Promise.resolve(void 0)}});chrome.runtime.onInstalled.addListener(async()=>{const a=v.storage.local,e=(await q.get()).isMigrated;!(await a.get("selectedAccount")).selectedAccount&&!e&&chrome.sidePanel.setPanelBehavior({openPanelOnActionClick:!0}).catch(r=>console.error(r)).finally(()=>{A.isSidePanel=!0})});const Ka=async()=>{const{isOverwriteEthereum:a}=await y.get();try{await chrome.scripting.registerContentScripts([{id:"inpage",matches:["file://*/*","http://*/*","https://*/*"],js:[a?"in-page-ethereum.js":"in-page.js"],runAt:"document_start",world:"MAIN",allFrames:!0}])}catch(e){u.info(`Failed to register in-page content script. ${e}`)}},ja=async()=>{try{const{isOverwriteEthereum:a}=await y.get();await chrome.scripting.updateContentScripts([{id:"inpage",js:[a?"in-page-ethereum.js":"in-page.js"]}])}catch(a){u.error("updateInPageContentScripts",a)}};Ka();
